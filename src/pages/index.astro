---

import { Image } from "@astrojs/image/components";
import homeSvg from "../../public/home-bg-svg.svg";
import searchIconSvg from "../../public/search-icon.svg";
import prisma from "../../lib/prisma";
const page = 1;
const pageSize = 20;
let initialBlogs: any;

try {
  initialBlogs = await prisma.blogs.findMany({
    orderBy: {
      createdAt: "desc",
    },
    select: {
      thumbnail: true,
      title: true,
      slug: true,
      category: true,
      UID: true,
      createdAt: true,
    },
    skip: (page - 1) * pageSize, // Calculate the number of items to skip. ex: page is 2 then 2-1 = 1 and finallay pageSize is show many items do I want to show, so 1*pageSize = 1*12 = 12 to skip
    take: pageSize, // Define the number of items to take per page
  });
} catch (e) {
  console.log(e);
} finally {
  await prisma.$disconnect();
}

import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import Button from "../components/Button.astro";
---

<Layout title="Discover a World of Diverse Insights | 10mBlogs">
  <main class={`min-h-screen`}>
    {/* hero section */}
    <section
      class="hero-section mb-5 flex justify-center items-center flex-col"
    >
      <h1 class="shadow-text max-h-[100px] text-[120px] md:text-[250px]">
        HOME
      </h1>

      <div
        class="home-layout flex gap-5 justify-center flex-col md:flex-row items-center mx-2 md:mx-20"
      >
        <Image
          src={homeSvg}
          alt="home-bg-svg"
          class="w-2/5 md:w-5/12"
          height={300}
          width={500}
          aspectRatio="4:3"
        />

        <div class="w-full md:w-2/3">
          <h1
            class="hero-section-heading text-4xl mx-5 my-5 md:text-6xl lg:w-[700px]"
          >
            Discover All Your Interests in One Place.
          </h1>

          <p class="heading-paragraph mx-5 my-5 md:text-xl lg:w-[600px]">
            Explore a treasure trove of captivating blogs curated for diverse
            interests: travel, tech, wellness, creativity, and more.
          </p>

          {/* search input */}
          <div class="mx-5 my-5 flex items-center md:mr-14 relative">
            <input
              type="search"
              id="search-input"
              name="search"
              placeholder="Search..."
              class="w-full bg-opacity-50 border bg-transparent border-gray-700 placeholder:text-gray-600 outline-none text-gray-800 py-2 leading-8 transition-colors duration-200 ease-in-out rounded-full px-5 pr-12"
            />
            {/* search icon */}

            <Image
              src={searchIconSvg}
              id="search-icon"
              width={30}
              height={30}
              aspectRatio={1}
              class="absolute right-2 flex items-center justify-center text-gray-900 cursor-pointer hover:text-blue-500 pr-2"
              alt="search-icon"
            />
          </div>
        </div>
      </div>
    </section>

    {/* recent post section */}

    <section class={` mx-auto mb-10 `} style={{ width: "90%" }}>
      <h1 class="shadow-text ms-2 md:ms-20 text-5xl max-h-[70px] md:text-8xl">
        Recent Posts
      </h1>

      <div
        class="flex justify-center items-center flex-wrap mt-10 gap-4 md:gap-8 w-full"
      >
        {
          initialBlogs?.map((post: any) => {
            return <Card postData={post} />;
          })
        }
      </div>
      {
        initialBlogs.length > 0 && (
          <div class="end-msg my-5 mt-10 flex justify-center items-center">
            <a href={"/explore"}>
              <Button text={"Explore more"} />
            </a>
          </div>
        )
      }
    </section>
  </main>
</Layout>

<style lang="scss">
  .heading-paragraph {
    font-family: Gothic A1 !important;
  }
  .hero-section {
    position: relative;

    .hero-section-heading {
      display: flex;

      flex-direction: column;
      color: #000;
      font-family: Gothic A1;
      font-style: normal;
      font-weight: 500;
      line-height: normal;
    }
    .btn {
      transition: 0.3s ease-in-out;
      background: linear-gradient(-45deg, #ff00cc, #8d39f8) !important;
      span {
        transition: 0.2s;
        &:hover {
          color: white;
          background: linear-gradient(-45deg, #ff00cc, #8d39f8);
        }
      }
    }
  }
  .shadow-text {
    color: #eeeeee;
    font-family: Gothic A1 !important;
    font-style: normal;
    font-weight: 800;
    line-height: normal;
  }
  .recent-post-title {
    position: relative;
    font-family: Gothic A1;
    &::before,
    &::after {
      content: "";
      position: absolute;
      bottom: -5px;
      left: 0;
      width: 5px;
      height: 5px;
      background-color: var(--secondary-color);
      border-radius: 50%;
    }
    &::after {
      left: 10px;
      width: 70px;
      height: 3.5px;
      border-radius: 10px;
    }
  }
</style>

<script defer >
  const searchInputBox = document.querySelector("#search-input");
  const searchIconBox = document.querySelector("#search-icon");

  searchInputBox.addEventListener("keyup", (e) => {
    searchHandler(e);
  });
  searchIconBox.addEventListener("click", (e) => {
    searchHandler(e);
  });

  const searchHandler = (e) => {
    if (e.keyCode === 13 || e.key === "Enter") {
      let searchText = e.target.value.trim().toLowerCase();
      if (searchText) open(`/blog/search?search=${searchText}`, "_self");
    } else if (e.type === "click") {
      let parentNodeItem = e.target.parentNode;
      let searchInput = parentNodeItem.querySelector("#search-input");
      searchInput = searchInput?.value?.trim().toLowerCase();
      if (searchInput) open(`/blog/search?search=${searchInput}`, "_self");
    }
  };
</script>
